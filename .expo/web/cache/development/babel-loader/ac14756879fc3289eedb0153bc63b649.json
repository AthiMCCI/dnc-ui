{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\DNC-Projects\\\\dnc-ui\\\\DNC-UI-main-code\\\\src\\\\screens\\\\LoginScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Header } from 'react-native-elements';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { theme } from \"../core/theme\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport getEnvVars from \"./environment\";\nvar _getEnvVars = getEnvVars(),\n  uiversion = _getEnvVars.uiversion;\nimport { AuthContext } from \"./context\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      value: '',\n      error: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState({\n      value: '',\n      error: ''\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    version = _useState6[0],\n    setversion = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    apiUrl = _useState8[0],\n    setapiUrl = _useState8[1];\n  var _React$useContext = React.useContext(AuthContext),\n    checkusertype = _React$useContext.checkusertype,\n    initializeusertype = _React$useContext.initializeusertype;\n\n  useEffect(function () {\n    var sampleurl = JSON.stringify(window.location.href);\n    var geturl = sampleurl.split('/');\n    setapiUrl(\"https://\" + geturl[2] + \"/dncserver\");\n    getApiversion(\"https://\" + geturl[2] + \"/dncserver\");\n    initializeusertype();\n  }, []);\n\n  var getApiversion = function getApiversion(apiUrl) {\n    var url = apiUrl + \"/version\";\n    var postMethod = {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(url, postMethod).then(function (response) {\n      var statusCode = response.status;\n      if (statusCode == 502) {\n        alert('Please turn on server');\n      }\n      response.json().then(function (responseJson) {\n        if (responseJson != null) {\n          var versionarray = responseJson.split(' ');\n          setversion(versionarray[4]);\n        }\n      });\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var onLoginPressed = function onLoginPressed() {\n    var emailError = nameValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n    if (emailError || passwordError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n    var data = {\n      uname: email.value,\n      pwd: password.value\n    };\n    var storeData = function storeData(taken, uname, usertype) {\n      var tokenValue, unameValue;\n      return _regeneratorRuntime.async(function storeData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              tokenValue = JSON.stringify(taken);\n              unameValue = JSON.stringify(uname);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', tokenValue));\n            case 5:\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('uname', unameValue));\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('usertype', usertype));\n            case 9:\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('apiUrl', apiUrl));\n            case 11:\n              _context.next = 16;\n              break;\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 13]], Promise);\n    };\n    var url = apiUrl + \"/login\";\n    var postMethod = {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(url, postMethod).then(function (response) {\n      var statusCode = response.status;\n      if (statusCode == 403) {\n        alert('inavalid token/token expired');\n      }\n      if (statusCode == 502) {\n        alert('Please turn on server');\n      }\n      response.json().then(function (responseJson) {\n        var usertype = '';\n        var result = 'Invalid username/password';\n        if (responseJson.message == result || responseJson.message == 'User not exists') {\n          navigation.reset({\n            index: 0,\n            routes: [{\n              name: 'LoginScreen'\n            }]\n          });\n          alert(result);\n        } else {\n          var token = responseJson['token'];\n          var uname = email.value;\n          var level = responseJson['level'];\n          if (level == \"1\") {\n            usertype = 'Client';\n            navigation.reset({\n              index: 0,\n              routes: [{\n                name: 'Dashboard'\n              }]\n            });\n            checkusertype();\n          } else {\n            usertype = 'Admin';\n            navigation.reset({\n              index: 0,\n              routes: [{\n                name: 'Dashboard'\n              }]\n            });\n          }\n          storeData(token, uname, usertype);\n        }\n      });\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var onSignupPressed = function onSignupPressed() {\n    var url = apiUrl + \"/signup\";\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      var result = \"Welcome Admin\";\n      if (responseJson[\"message\"] == result) {\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'AdminSignup'\n          }]\n        });\n      } else if (responseJson[\"message\"] = \"Welcome User\") {\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'UserSignup'\n          }]\n        });\n      } else {\n        alert(JSON.stringify(responseJson[\"message\"]));\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n  var handleKeyDown = function handleKeyDown(e) {\n    if (e.nativeEvent.key == \"Enter\") {\n      onLoginPressed();\n    }\n  };\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    barStyle: \"default\",\n    centerComponent: {\n      text: 'DATA NORMALIZATION CONSOLE',\n      style: {\n        color: 'black',\n        fontSize: 20,\n        marginTop: -100,\n        fontFamily: 'Helvetica'\n      }\n    },\n    containerStyle: {\n      width: '200%',\n      height: 100,\n      margintop: -500,\n      backgroundColor: 'WHITE'\n    },\n    placement: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 8\n    }\n  }), React.createElement(\"headers\", {\n    style: {\n      fontFamily: 'Helvetica',\n      color: 'grey'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }, \" USER LOGIN\"), React.createElement(TextInput, {\n    label: \"User name\",\n    returnKeyType: \"next\",\n    fontFamily: \"Helvetica\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    fontFamily: \"Helvetica\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    onKeyPress: function onKeyPress(e) {\n      return handleKeyDown(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.forgotPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('ForgotPasswordScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'blue',\n      fontFamily: 'Helvetica ',\n      fontSize: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, \"Forgot your password?\"))), React.createElement(Button, {\n    mode: \"contained\",\n    color: \"#53A0FE\",\n    onPress: onLoginPressed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  }, \"Login\"), React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      position: 'absolute',\n      bottom: 10,\n      marginHorizontal: 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'black',\n      fontSize: 11,\n      fontWeight: 'bold',\n      fontFamily: 'Helvetica'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, \"DNC \", uiversion, \" | Server \", version, \" \")));\n};\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.third\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.third\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","useEffect","Header","Text","Background","Button","TextInput","AsyncStorage","theme","nameValidator","passwordValidator","getEnvVars","uiversion","AuthContext","LoginScreen","navigation","value","error","email","setEmail","password","setPassword","version","setversion","apiUrl","setapiUrl","useContext","checkusertype","initializeusertype","sampleurl","JSON","stringify","window","location","href","geturl","split","getApiversion","url","postMethod","method","headers","Accept","fetch","then","response","statusCode","status","alert","json","responseJson","versionarray","catch","console","onLoginPressed","emailError","passwordError","data","uname","pwd","storeData","taken","usertype","tokenValue","unameValue","setItem","log","body","result","message","reset","index","routes","name","token","level","onSignupPressed","handleKeyDown","e","nativeEvent","key","text","style","color","fontSize","marginTop","fontFamily","width","height","margintop","backgroundColor","styles","forgotPassword","navigate","row","position","bottom","marginHorizontal","fontWeight","StyleSheet","create","alignItems","marginBottom","flexDirection","forgot","colors","third","link"],"sources":["D:/DNC-Projects/dnc-ui/DNC-UI-main-code/src/screens/LoginScreen.js"],"sourcesContent":["/*###############################################################################\r\n// Module: LoginScreen.js\r\n// \r\n// Function:\r\n//      Function to export login screen\r\n// \r\n// Version:\r\n//    V1.02  Tue Dec 01 2021 10:30:00  muthup   Edit level 2\r\n// \r\n//  Copyright notice:\r\n//       This file copyright (C) 2021 by\r\n//       MCCI Corporation\r\n//       3520 Krums Corners Road\r\n//       Ithaca, NY 14850\r\n//       An unpublished work. All rights reserved.\r\n// \r\n//       This file is proprietary information, and may not be disclosed or\r\n//       copied without the prior permission of MCCI Corporation.\r\n// \r\n//  Author:\r\n//       muthup, MCCI July 2021\r\n// \r\n//  Revision history:\r\n//       1.01 Wed July 16 2021 10:30:00 muthup\r\n//       Module created.\r\n//       1.02 Tue Dec 01 2021 10:30:00 muthup\r\n//       Fixed issues #2 #3 #4 #5 #6 #7\r\n###############################################################################*/\r\n\r\nimport React, { useState,useEffect } from 'react'\r\nimport { Header } from 'react-native-elements';\r\nimport { TouchableOpacity, StyleSheet, View, Alert ,Modal, ActivityIndicator} from 'react-native'\r\nimport { Text } from 'react-native-paper'\r\nimport Background from '../components/Background'\r\nimport Button from '../components/Button'\r\nimport TextInput from '../components/TextInput'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\nimport { theme } from '../core/theme'\r\nimport { nameValidator } from '../helpers/nameValidator'\r\nimport { passwordValidator } from '../helpers/passwordValidator'\r\nimport getEnvVars from './environment';\r\nconst { uiversion } = getEnvVars();\r\nimport { AuthContext } from \"./context\";\r\nconst LoginScreen = ({ navigation }) => {\r\n  let [email, setEmail] = useState({ value: '', error: '' })\r\n  let [password, setPassword] = useState({ value: '', error: '' })\r\n  const [version,setversion]=useState('');\r\n  const [apiUrl,setapiUrl]=useState('');\r\n  const { checkusertype,initializeusertype } = React.useContext(AuthContext);\r\n  \r\n  //This function is used to fetch and update the values before execute other function\r\n  useEffect(() => {\r\n    let sampleurl=JSON.stringify(window.location.href)\r\n    let geturl=sampleurl.split('/')\r\n    setapiUrl(\"https://\"+geturl[2]+\"/dncserver\")\r\n    getApiversion(\"https://\"+geturl[2]+\"/dncserver\");\r\n    initializeusertype();\r\n  }, [])\r\n  \r\n  //To get the api token\r\n  const getApiversion = (apiUrl) => {\r\n    const url = apiUrl+\"/version\"\r\n    const postMethod= {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      \r\n    }\r\n    fetch(url,postMethod)\r\n    .then(response => {\r\n      const statusCode = response.status\r\n      if (statusCode == 502) {\r\n        alert('Please turn on server')\r\n      }\r\n      response.json().then(responseJson => {\r\n        if(responseJson!=null){\r\n        let versionarray=responseJson.split(' ');\r\n        setversion(versionarray[4])\r\n        }\r\n        \r\n      })\r\n    })\r\n    .catch(error => {\r\n        console.error(error)\r\n    })\r\n  }\r\n  \r\n  //To verify the login authentication\r\n  const onLoginPressed = () => {\r\n    const emailError = nameValidator(email.value)\r\n    const passwordError = passwordValidator(password.value)\r\n    if (emailError || passwordError) {\r\n      setEmail({ ...email, error: emailError })\r\n      setPassword({ ...password, error: passwordError })\r\n      return\r\n    }\r\n    var data = {\r\n      uname: email.value,\r\n      pwd: password.value,\r\n    }\r\n    const storeData = async (taken, uname, usertype) => {\r\n      try {\r\n        const tokenValue = JSON.stringify(taken)\r\n        const unameValue = JSON.stringify(uname)\r\n        \r\n        await AsyncStorage.setItem('token', tokenValue)\r\n        await AsyncStorage.setItem('uname', unameValue)\r\n        await AsyncStorage.setItem('usertype', usertype)\r\n        await AsyncStorage.setItem('apiUrl', apiUrl)\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    const url = apiUrl+\"/login\";\r\n    const postMethod= {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    }\r\n   \r\n    fetch(url,postMethod)\r\n    .then(response => {\r\n        const statusCode = response.status\r\n        if (statusCode == 403) {\r\n          alert('inavalid token/token expired')\r\n        }\r\n        if (statusCode == 502) {\r\n          alert('Please turn on server')\r\n        }\r\n        response.json().then(responseJson => {\r\n          let usertype = ''\r\n          const result = 'Invalid username/password'\r\n          if (responseJson.message == result ||responseJson.message=='User not exists') {\r\n            navigation.reset({\r\n              index: 0,\r\n              routes: [{ name: 'LoginScreen' }],\r\n            })\r\n            alert(result)\r\n          } \r\n          else {\r\n            const token = responseJson['token']\r\n            const uname = email.value\r\n            const level = responseJson['level']\r\n            if (level == \"1\") {\r\n              usertype = 'Client'\r\n              navigation.reset({\r\n                index: 0,\r\n                routes: [{ name: 'Dashboard' }],\r\n              })\r\n              checkusertype()\r\n            } else {\r\n             \r\n              usertype = 'Admin'\r\n          \r\n              navigation.reset({\r\n                index: 0,\r\n                routes: [{ name: 'Dashboard' }],\r\n              })\r\n            }\r\n\r\n            storeData(token, uname, usertype)\r\n          }\r\n        })\r\n      })\r\n      .catch(error => {\r\n        console.error(error)\r\n      })\r\n  }\r\n  \r\n  //To get type user need to signup\r\n  const onSignupPressed = () => {\r\n   \r\n    const url = apiUrl+\"/signup\";\r\n    fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n       \r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    .then(response => response.json())\r\n    .then(responseJson => {\r\n      const result = \"Welcome Admin\"\r\n      if (responseJson[\"message\"] == result) {\r\n          navigation.reset({\r\n            index: 0,\r\n            routes: [{ name: 'AdminSignup' }],\r\n          })\r\n      } else if(responseJson[\"message\"]=\"Welcome User\") {\r\n        navigation.reset({\r\n            index: 0,\r\n            routes: [{ name: 'UserSignup' }],\r\n          })\r\n        }\r\n      else{\r\n          alert(JSON.stringify(responseJson[\"message\"]));\r\n        }\r\n      })\r\n    .catch(error => {\r\n        console.error(error)\r\n    })\r\n  }\r\n  const handleKeyDown=(e) =>  {\r\n    if(e.nativeEvent.key == \"Enter\"){\r\n      onLoginPressed();\r\n    }\r\n}\r\n\r\n  return (\r\n  \r\n    <Background>\r\n       <Header\r\n            barStyle=\"default\"\r\n            centerComponent={{\r\n              text: 'DATA NORMALIZATION CONSOLE',\r\n              style: {color: 'black', fontSize: 20,marginTop:-100,fontFamily:'Helvetica'},\r\n            }}\r\n            containerStyle={{\r\n              width: '200%',\r\n              height: 100,\r\n              margintop :-500,\r\n              backgroundColor: 'WHITE',\r\n            }}\r\n            placement=\"center\"\r\n                      />\r\n      \r\n      \r\n      <headers style={{fontFamily:'Helvetica', color:'grey'}}> USER LOGIN</headers> \r\n      \r\n        <TextInput\r\n        label=\"User name\"\r\n        returnKeyType=\"next\"\r\n        fontFamily=\"Helvetica\"\r\n        value={email.value}\r\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n        />\r\n        <TextInput\r\n        label=\"Password\"\r\n        returnKeyType=\"done\"\r\n        fontFamily=\"Helvetica\"\r\n        value={password.value}\r\n        onChangeText={text => setPassword({ value: text, error: '' })}\r\n        error={!!password.error}\r\n        errorText={password.error}\r\n        secureTextEntry={true}\r\n        onKeyPress={e=>handleKeyDown(e)}\r\n        />\r\n        <View style={styles.forgotPassword}>\r\n          <TouchableOpacity\r\n            onPress={() => navigation.navigate('ForgotPasswordScreen')}\r\n          >\r\n            <Text style={{color:'blue',fontFamily:'Helvetica ',fontSize:15}}>Forgot your password?</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <Button mode=\"contained\"color = \"#53A0FE\"  onPress={onLoginPressed}>Login</Button>\r\n        <View style={styles.row}>\r\n        \r\n        </View>\r\n        <View style={{position: 'absolute', bottom: 10, marginHorizontal: 'auto'}}>\r\n        <Text style={{ color: 'black', fontSize: 11, fontWeight: 'bold',fontFamily:'Helvetica' }}>DNC {uiversion} | Server {version} </Text>\r\n        </View>\r\n     \r\n    </Background>\r\n   \r\n    \r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  forgotPassword: {\r\n    width:'100%',\r\n    alignItems: 'flex-end',\r\n    marginBottom: 24,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 4,\r\n  },\r\n  forgot: {\r\n    fontSize: 13,\r\n    color: theme.colors.third,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.third,\r\n  },\r\n})\r\n\r\nexport default LoginScreen"],"mappings":"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"},"metadata":{},"sourceType":"module"}