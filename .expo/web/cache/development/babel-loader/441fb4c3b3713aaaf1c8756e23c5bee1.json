{"ast":null,"code":"export var UpdateEventType;\n(function (UpdateEventType) {\n  UpdateEventType[\"UPDATE_AVAILABLE\"] = \"updateAvailable\";\n  UpdateEventType[\"NO_UPDATE_AVAILABLE\"] = \"noUpdateAvailable\";\n  UpdateEventType[\"ERROR\"] = \"error\";\n})(UpdateEventType || (UpdateEventType = {}));","map":{"version":3,"mappings":"AAEA,WAAYA,eAIX;AAJD,WAAYA,eAAe;EACzBA,uDAAoC;EACpCA,4DAAyC;EACzCA,kCAAe;AACjB,CAAC,EAJWA,eAAe,KAAfA,eAAe","names":["UpdateEventType"],"sourceRoot":"","sources":["../src/Updates.types.ts"],"sourcesContent":["import Constants from 'expo-constants';\n\nexport enum UpdateEventType {\n  UPDATE_AVAILABLE = 'updateAvailable',\n  NO_UPDATE_AVAILABLE = 'noUpdateAvailable',\n  ERROR = 'error',\n}\n\n// TODO(eric): move source of truth for manifest type to this module\nexport type Manifest = typeof Constants.manifest;\n\nexport type UpdateCheckResult = { isAvailable: false } | { isAvailable: true; manifest: Manifest };\n\nexport type UpdateFetchResult = { isNew: false } | { isNew: true; manifest: Manifest };\n\nexport type Listener<E> = (event: E) => void;\n\nexport type UpdateEvent =\n  | { type: UpdateEventType.NO_UPDATE_AVAILABLE }\n  | { type: UpdateEventType.UPDATE_AVAILABLE; manifest: Manifest }\n  | { type: UpdateEventType.ERROR; message: string };\n\nexport type LocalAssets = { [remoteUrl: string]: string };\n"]},"metadata":{},"sourceType":"module"}